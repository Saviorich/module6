plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "org.sonarqube" version "3.3"
	id 'jacoco'
	id 'java'
	id 'war'
}



repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.hateoas:spring-hateoas:1.3.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.4.5'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'

	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	implementation 'org.modelmapper:modelmapper:2.4.4'

	implementation project(':logic')

	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	implementation 'org.slf4j:slf4j-api:1.7.31'
	implementation 'org.slf4j:slf4j-log4j12:1.7.31'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

subprojects {
	sonarqube {
		properties {
			property "sonar.sources", "src"
		}
	}
}

configurations {
	all*.exclude module : 'spring-boot-starter-logging'
	all*.exclude module : 'spring-boot-starter-tomcat'
}

test {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}